{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Messages/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm1111.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","to","isActive","normal","active","name","Message","message","AddMessageForm","formik","useFormik","initialValues","validate","values","onSubmit","value","sendMessageAC","message_input","handleSubmit","FormControl","FormGroup","TextField","fullWidth","type","label","getFieldProps","error","touched","Boolean","errors","helperText","Button","size","color","variant","Dialogs","dialogsElements","dialogs","dialogsData","map","d","messagesElements","messagesData","m","dialogs_items","messages","textBody","DialogsContainer","compose","connect","state","dialogsPage","WithAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,QAAU,yBAAyB,cAAgB,iC,oBCA5LD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,2BAA2B,OAAS,6B,+GCqBpFC,EAd0B,SAACC,GACtC,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAOC,OAAvB,SACI,cAAC,IAAD,CAASC,GAAIL,EACJE,UAAW,gBAAEI,EAAF,EAAEA,SAAF,gBAAkBH,IAAOI,OAAzB,YAAmCD,EAAWH,IAAOK,OAAQ,KADjF,SAEET,EAAMU,UCPLC,EAJ6B,SAACX,GACzC,OAAO,qBAAKG,UAAWC,IAAOQ,QAAvB,SAAiCZ,EAAMY,W,mDCMrCC,EAAsC,SAACb,GAChD,IAGMc,EAASC,YAAU,CACrBC,cAAe,CACXJ,QAAS,IAEbK,SAAU,SAACC,GACP,IAAKA,EAAON,QACR,MAAO,CACHA,QAAS,sCAIrBO,SAAU,SAAAD,GAdQ,IAACE,IAeDF,EAAON,QAdzBZ,EAAMqB,cAAcD,MAkBxB,OACI,sBAAMjB,UAAWC,IAAOkB,cAAeH,SAAUL,EAAOS,aAAxD,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,yBACIC,WAAS,EACTC,KAAM,UACNC,MAAO,WACHf,EAAOgB,cAAc,YAJ7B,IAKIC,MAAOjB,EAAOkB,QAAQpB,SAAWqB,QAAQnB,EAAOoB,OAAOtB,SACvDuB,WAAYrB,EAAOkB,QAAQpB,SAAWE,EAAOoB,OAAOtB,WAExD,cAACwB,EAAA,EAAD,CAAQC,KAAM,QAASC,MAAO,UACtBC,QAAS,YAAaX,KAAM,SADpC,kCCHLY,EAzBiC,SAACxC,GAE7C,IAAMyC,EAAkBzC,EAAM0C,QAAQC,YACjCC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAuB3C,GAAI2C,EAAE3C,GAAIQ,KAAMmC,EAAEnC,MAAxBmC,EAAE3C,OAE7B4C,EAAmB9C,EAAM0C,QAAQK,aAClCH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAoB9C,GAAI8C,EAAE9C,GAAIU,QAASoC,EAAEpC,SAA3BoC,EAAE9C,OAIhC,OACI,sBAAKC,UAAWC,IAAOsC,QAAvB,UACI,qBAAKvC,UAAWC,IAAO6C,cAAvB,SACKR,IAEL,sBAAKtC,UAAWC,IAAO8C,SAAvB,UACKJ,EACD,cAAC,EAAD,CAAgBK,SAAUnD,EAAMmD,SAAU9B,cAAerB,EAAMqB,uB,wBCVzE+B,EAAmBC,YACrBC,aAJoB,SAACC,GAAD,MAA0B,CAC9Cb,QAASa,EAAMC,eAKX,CACInC,oBAERoC,IANqBJ,CAOvBb,GAEaY","file":"static/js/4.859a014c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__I_CAQ\",\"dialogs_items\":\"Dialogs_dialogs_items__1f2rE\",\"messages\":\"Dialogs_messages__3SXIq\",\"message\":\"Dialogs_message__1-0vu\",\"message_input\":\"Dialogs_message_input__2HLwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2lV-Q\",\"normal\":\"DialogItem_normal__2tz1s\",\"active\":\"DialogItem_active__1QU2f\"};","import React from \"react\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogType} from \"../../../Redux/dialogs-reducer\";\r\n\r\n\r\n\r\n\r\nconst DialogItem: React.FC<DialogType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path}\r\n                     className={({isActive})=> `${styles.normal} ${isActive ? styles.active :''}`}\r\n            >{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from '../Dialogs.module.css'\r\nimport {MessagesDataType} from \"../../../Redux/dialogs-reducer\";\r\n\r\nconst Message: React.FC<MessagesDataType> = (props) => {\r\n    return <div className={styles.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from '../Dialogs.module.css'\r\nimport {useFormik} from \"formik\";\r\nimport {Button, FormControl, FormGroup, TextField} from \"@mui/material\";\r\n\r\n\r\ntype PropsType = {\r\n    textBody: string\r\n    sendMessageAC: (text: string) => void\r\n}\r\n\r\nexport const AddMessageForm: React.FC<PropsType> = (props) => {\r\n    const onSendMessage = (value: string) => {\r\n        props.sendMessageAC(value)\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            message: '',\r\n        },\r\n        validate: (values) => {\r\n            if (!values.message) {\r\n                return {\r\n                    message: 'Please, write your text in field!'\r\n                }\r\n            }\r\n        },\r\n        onSubmit: values => {\r\n            onSendMessage(values.message)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form className={styles.message_input} onSubmit={formik.handleSubmit}>\r\n            <FormControl>\r\n                <FormGroup>\r\n                    <TextField\r\n                        fullWidth\r\n                        type={'message'}\r\n                        label={'Message'}\r\n                        {...formik.getFieldProps('message')}\r\n                        error={formik.touched.message && Boolean(formik.errors.message)}\r\n                        helperText={formik.touched.message && formik.errors.message}\r\n                    />\r\n                    <Button size={'small'} color={'primary'}\r\n                            variant={'contained'} type={'submit'}>Send message</Button>\r\n                </FormGroup>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Messages/Message\";\r\nimport {DialogPageType} from \"../../Redux/redux-store\";\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm1111\";\r\n\r\n\r\ntype DialogsPagePropsType = {\r\n    dialogs: DialogPageType\r\n    textBody: string\r\n    sendMessageAC: (text:string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPagePropsType> = (props) => {\r\n\r\n    const dialogsElements = props.dialogs.dialogsData\r\n        .map((d) => <DialogItem key={d.id} id={d.id} name={d.name}/>)\r\n\r\n    const messagesElements = props.dialogs.messagesData\r\n        .map((m) => <Message key={m.id} id={m.id} message={m.message}/>)\r\n\r\n\r\n    // if (!props.isAuth) return <Navigate to={PATH.login}/>\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm textBody={props.textBody} sendMessageAC={props.sendMessageAC}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageAC} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {AppStateType, DialogPageType,} from \"../../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype mapStateType = {\r\n    dialogs: DialogPageType\r\n}\r\n\r\ntype mapDispatchType = {\r\n    sendMessageAC: (text: string) => void\r\n}\r\ntype ownPropsType = {}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    dialogs: state.dialogsPage,\r\n})\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n    connect<mapStateType, mapDispatchType, ownPropsType, AppStateType>(\r\n        mapStateToProps,\r\n        {\r\n            sendMessageAC\r\n        }),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}